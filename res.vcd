$date
	Tue Dec 31 10:29:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # underflow $end
$var wire 1 $ overflow $end
$var wire 1 % ZERO $end
$var wire 1 & WRITE_REG $end
$var wire 1 ' WRITE_MEM $end
$var wire 32 ( RESULT [31:0] $end
$var wire 1 ) PC_WRITE $end
$var wire 32 * PC_TOP [31:0] $end
$var wire 4 + OP [3:0] $end
$var wire 1 , IRWRITE $end
$var wire 32 - IN [31:0] $end
$var wire 2 . IMM_TYPE [1:0] $end
$var wire 32 / EXT [31:0] $end
$var wire 32 0 DATA [31:0] $end
$var wire 32 1 D2 [31:0] $end
$var wire 32 2 D1 [31:0] $end
$var wire 32 3 B [31:0] $end
$var wire 32 4 ALU_RESULT [31:0] $end
$var wire 1 5 ALU_MEM $end
$var wire 2 6 ALUSRCB [1:0] $end
$var wire 1 7 ALUSRCA $end
$var wire 1 8 ADDSRC $end
$var wire 32 9 ADDR_SRC [31:0] $end
$var wire 32 : A [31:0] $end
$var parameter 32 ; c $end
$scope module ALU $end
$var wire 1 % zero $end
$var wire 1 < sub_underflow $end
$var wire 32 = sub_result [31:0] $end
$var wire 1 > sub_overflow $end
$var wire 4 ? op [3:0] $end
$var wire 1 @ mul_underflow $end
$var wire 32 A mul_result [31:0] $end
$var wire 1 B mul_overflow $end
$var wire 32 C b [31:0] $end
$var wire 1 D add_underflow $end
$var wire 32 E add_result [31:0] $end
$var wire 1 F add_overflow $end
$var wire 32 G a [31:0] $end
$var reg 1 $ overflow $end
$var reg 32 H result [31:0] $end
$var reg 1 # underflow $end
$scope module add_module $end
$var wire 1 I a_is_inf $end
$var wire 1 J a_is_nan $end
$var wire 1 K b_is_inf $end
$var wire 1 L b_is_nan $end
$var wire 1 D underflow $end
$var wire 1 M sign_b $end
$var wire 1 N sign_a $end
$var wire 32 O result [31:0] $end
$var wire 1 F overflow $end
$var wire 24 P mant_b [23:0] $end
$var wire 24 Q mant_a [23:0] $end
$var wire 8 R exp_b [7:0] $end
$var wire 8 S exp_a [7:0] $end
$var wire 1 T b_is_zero $end
$var wire 32 U b [31:0] $end
$var wire 1 V a_is_zero $end
$var wire 32 W a [31:0] $end
$var reg 8 X exp_res [7:0] $end
$var reg 24 Y mant_res [23:0] $end
$var reg 1 Z sign_res $end
$upscope $end
$scope module mul_module $end
$var wire 1 [ a_is_inf $end
$var wire 1 \ a_is_nan $end
$var wire 1 ] b_is_inf $end
$var wire 1 ^ b_is_nan $end
$var wire 1 _ sign_res $end
$var wire 1 @ underflow $end
$var wire 1 ` sign_b $end
$var wire 1 a sign_a $end
$var wire 32 b result [31:0] $end
$var wire 1 B overflow $end
$var wire 48 c mant_product [47:0] $end
$var wire 24 d mant_b [23:0] $end
$var wire 24 e mant_a [23:0] $end
$var wire 9 f exp_sum [8:0] $end
$var wire 8 g exp_b [7:0] $end
$var wire 8 h exp_a [7:0] $end
$var wire 1 i b_is_zero $end
$var wire 32 j b [31:0] $end
$var wire 1 k a_is_zero $end
$var wire 32 l a [31:0] $end
$var reg 8 m exp_res [7:0] $end
$var reg 24 n mant_res [23:0] $end
$upscope $end
$scope module sub_module $end
$var wire 1 < underflow $end
$var wire 32 o result [31:0] $end
$var wire 1 > overflow $end
$var wire 32 p b_neg [31:0] $end
$var wire 32 q b [31:0] $end
$var wire 32 r a [31:0] $end
$scope module adder $end
$var wire 1 s a_is_inf $end
$var wire 1 t a_is_nan $end
$var wire 32 u b [31:0] $end
$var wire 1 v b_is_inf $end
$var wire 1 w b_is_nan $end
$var wire 1 < underflow $end
$var wire 1 x sign_b $end
$var wire 1 y sign_a $end
$var wire 32 z result [31:0] $end
$var wire 1 > overflow $end
$var wire 24 { mant_b [23:0] $end
$var wire 24 | mant_a [23:0] $end
$var wire 8 } exp_b [7:0] $end
$var wire 8 ~ exp_a [7:0] $end
$var wire 1 !" b_is_zero $end
$var wire 1 "" a_is_zero $end
$var wire 32 #" a [31:0] $end
$var reg 8 $" exp_res [7:0] $end
$var reg 24 %" mant_res [23:0] $end
$var reg 1 &" sign_res $end
$upscope $end
$upscope $end
$upscope $end
$scope module CONTROL_UNIT $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 % zero $end
$var wire 32 '" IN [31:0] $end
$var parameter 3 (" ALU_WB $end
$var parameter 3 )" BRANCH $end
$var parameter 2 *" B_TYPE $end
$var parameter 3 +" DECODE $end
$var parameter 3 ," FETCH $end
$var parameter 2 -" I_TYPE $end
$var parameter 3 ." MEM_FETCH $end
$var parameter 3 /" MEM_WB $end
$var parameter 3 0" REG_WB $end
$var parameter 2 1" R_TYPE $end
$var parameter 2 2" S_TYPE $end
$var parameter 3 3" pc_update $end
$var reg 1 8 addr_src $end
$var reg 1 5 alu_mem $end
$var reg 1 7 alusrcA $end
$var reg 2 4" alusrcB [1:0] $end
$var reg 2 5" imm_type [1:0] $end
$var reg 1 , irwrite $end
$var reg 4 6" op [3:0] $end
$var reg 1 ) pc_write $end
$var reg 3 7" state [2:0] $end
$var reg 2 8" type [1:0] $end
$var reg 1 ' write_mem $end
$var reg 1 & write_reg $end
$upscope $end
$scope module IMMEXT $end
$var wire 1 ! clk $end
$var wire 2 9" f [1:0] $end
$var wire 32 :" imm [31:0] $end
$var reg 32 ;" ext [31:0] $end
$upscope $end
$scope module INSTR_REG $end
$var wire 1 ! clk $end
$var wire 1 , enb $end
$var wire 32 <" in [31:0] $end
$var reg 32 =" out [31:0] $end
$upscope $end
$scope module MEM $end
$var wire 1 ! clk $end
$var wire 32 >" rd [31:0] $end
$var wire 1 ' we $end
$var wire 32 ?" din [31:0] $end
$var wire 32 @" addr [31:0] $end
$upscope $end
$scope module MUX2X1A $end
$var wire 1 7 sel $end
$var wire 32 A" out [31:0] $end
$var wire 32 B" in1 [31:0] $end
$var wire 32 C" in0 [31:0] $end
$upscope $end
$scope module MUX2X1ADDRSRC $end
$var wire 1 8 sel $end
$var wire 32 D" out [31:0] $end
$var wire 32 E" in1 [31:0] $end
$var wire 32 F" in0 [31:0] $end
$upscope $end
$scope module MUX2X1RESULT $end
$var wire 32 G" in0 [31:0] $end
$var wire 32 H" in1 [31:0] $end
$var wire 1 5 sel $end
$var wire 32 I" out [31:0] $end
$upscope $end
$scope module MUX3X1B $end
$var wire 32 J" in1 [31:0] $end
$var wire 32 K" in2 [31:0] $end
$var wire 2 L" sel [1:0] $end
$var wire 32 M" in0 [31:0] $end
$var reg 32 N" out [31:0] $end
$upscope $end
$scope module PC $end
$var wire 1 ! clk $end
$var wire 32 O" pc_next [31:0] $end
$var wire 1 ) pc_write $end
$var wire 1 " rst $end
$var reg 32 P" pc [31:0] $end
$upscope $end
$scope module REGISTER_FILE $end
$var wire 5 Q" a1 [4:0] $end
$var wire 5 R" a2 [4:0] $end
$var wire 1 ! clk $end
$var wire 32 S" d1 [31:0] $end
$var wire 32 T" d2 [31:0] $end
$var wire 5 U" da [4:0] $end
$var wire 32 V" din [31:0] $end
$var wire 1 & web $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 3"
b10 2"
b0 1"
b100 0"
b101 /"
b11 ."
b1 -"
b0 ,"
b1 +"
b11 *"
b110 )"
b10 ("
b100 ;
$end
#0
$dumpvars
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
b100 K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
b0 7"
bx 6"
bx 5"
bx 4"
bx '"
x&"
bx %"
bx $"
bx #"
x""
x!"
bx ~
bx }
b1xxxxxxxxxxxxxxxxxxxxxxx |
b1xxxxxxxxxxxxxxxxxxxxxxx {
bx z
xy
xx
xw
xv
bx u
xt
xs
bx r
bx q
bx p
bx o
bx n
bx m
bx l
xk
bx j
xi
bx h
bx g
bx f
b1xxxxxxxxxxxxxxxxxxxxxxx e
b1xxxxxxxxxxxxxxxxxxxxxxx d
bx c
bx b
xa
x`
x_
x^
x]
x\
x[
xZ
bx Y
bx X
bx W
xV
bx U
xT
bx S
bx R
b1xxxxxxxxxxxxxxxxxxxxxxx Q
b1xxxxxxxxxxxxxxxxxxxxxxx P
bx O
xN
xM
xL
xK
xJ
xI
bx H
bx G
xF
bx E
xD
bx C
xB
bx A
x@
bx ?
x>
bx =
x<
bx :
bx 9
x8
x7
bx 6
x5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
x,
bx +
bx *
x)
bx (
x'
x&
x%
x$
x#
0"
0!
$end
#5000
0)
0,
b0 *
b0 C"
b0 F"
b0 P"
1"
1!
#10000
0!
#15000
b1000001010000110100011 0
b1000001010000110100011 <"
b1000001010000110100011 >"
b1000001010000110100011 H"
b0 9
b0 @"
b0 D"
b1 7"
1,
08
0'
0&
1!
0"
#20000
0!
#25000
b10000000000000000000000x |
0t
0s
b10000000000000000000000x e
0\
0[
b10000000000000000000000x Q
0J
0I
b0 ~
0y
b0 h
0a
b0 S
0N
b0x :
b0x G
b0x W
b0x l
b0x r
b0x #"
b0x A"
b10 1
b10 ?"
b10 M"
b10 T"
b1 2
b1 B"
b1 S"
b11 U"
b10 R"
b1 Q"
0,
b1000001010000110100011 -
b1000001010000110100011 '"
b1000001010000110100011 :"
b1000001010000110100011 ="
1!
#30000
0!
#35000
bx 0
bx <"
bx >"
bx H"
bx 9
bx @"
bx D"
1'
05
18
0""
b100000000000000000000001 |
0k
b100000000000000000000001 e
0V
b100000000000000000000001 Q
b1 :
b1 G
b1 W
b1 l
b1 r
b1 #"
b1 A"
b1 .
b1 5"
b1 9"
b0 +
b0 ?
b0 6"
b1 6
b1 4"
b1 L"
17
b101 7"
b10 8"
1!
#40000
0!
#45000
b111 7"
b10000000000000000000000000000100 =
b10000000000000000000000000000100 o
b10000000000000000000000000000100 z
0w
0v
1&"
0>
1<
b0 $"
b100 %"
b100000000000000000000011 {
0!"
b1000 n
1x
b0 }
b10000000000000000000010000000000000000000000011 c
0B
0@
b10000001 m
b1000000100000000000000000001000 A
b1000000100000000000000000001000 b
b100 Y
b100 E
b100 O
b100 9
b100 @"
b100 D"
b10000000000000000000000000000011 p
b10000000000000000000000000000011 u
0i
b100000000000000000000011 d
0^
0]
b110000001 f
0_
0T
b100000000000000000000011 P
0L
0K
0Z
0F
1D
b0 X
1%
b100 4
b100 E"
b100 I"
b100 O"
b100 V"
b0 g
0`
b0 R
0M
b100 (
b100 H
b100 G"
b11 3
b11 C
b11 U
b11 j
b11 q
b11 N"
b11 /
b11 ;"
b11 J"
1!
#50000
0!
#55000
b10000000000000000000000000000100 =
b10000000000000000000000000000100 o
b10000000000000000000000000000100 z
b100000000000000000000100 {
b100000000000000000000100 %"
b1000 n
0@
b10000001 m
b10000000000000000000010000000000000000000000000 c
b100000000000000000000100 Y
b10000000000000000000000000000100 p
b10000000000000000000000000000100 u
b100000000000000000000100 d
b100000000000000000000100 P
1""
b100000000000000000000000 |
1k
b100000000000000000000000 e
1V
b100000000000000000000000 Q
b100 3
b100 C
b100 U
b100 j
b100 q
b100 N"
b0 :
b0 G
b0 W
b0 l
b0 r
b0 #"
b0 A"
b0 7"
1)
b10 6
b10 4"
b10 L"
07
b10 0
b10 <"
b10 >"
b10 H"
1!
#60000
0!
#65000
b1000000100000000000000000010000 A
b1000000100000000000000000010000 b
b10000000000000000000000000001000 =
b10000000000000000000000000001000 o
b10000000000000000000000000001000 z
b1000 E
b1000 O
b10000 n
b1000 %"
b10000000000000000000100000000000000000000010000 c
b1000 Y
0""
b100000000000000000000100 |
0k
b100000000000000000000100 e
0V
b100000000000000000000100 Q
b1000 4
b1000 E"
b1000 I"
b1000 O"
b1000 V"
b1000 (
b1000 H
b1000 G"
b100 :
b100 G
b100 W
b100 l
b100 r
b100 #"
b100 A"
b1 7"
0)
1,
08
0'
b100 *
b100 C"
b100 F"
b100 P"
1!
#70000
0!
#75000
bx 0
bx <"
bx >"
bx H"
bx 9
bx @"
bx D"
1'
18
b100000000xxxxxxxxxxxxxxxxxxxxxxx =
b100000000xxxxxxxxxxxxxxxxxxxxxxx o
b100000000xxxxxxxxxxxxxxxxxxxxxxx z
b0xxxxxxxxxxxxxxxxxxxxxxx E
b0xxxxxxxxxxxxxxxxxxxxxxx O
xs
x[
bx A
bx b
xI
b100000000000000000000011 {
xB
x@
bx m
bx n
x""
xt
xk
x\
bx f
x_
xV
xJ
x%
bx %"
bx c
bx Y
bx ~
xy
bx h
xa
bx S
xN
b10000000000000000000000000000011 p
b10000000000000000000000000000011 u
b100000000000000000000011 d
b100000000000000000000011 P
b1xxxxxxxxxxxxxxxxxxxxxxx |
b1xxxxxxxxxxxxxxxxxxxxxxx e
b1xxxxxxxxxxxxxxxxxxxxxxx Q
bx 4
bx E"
bx I"
bx O"
bx V"
bx (
bx H
bx G"
bx 1
bx ?"
bx M"
bx T"
bx 2
bx B"
bx S"
b11 3
b11 C
b11 U
b11 j
b11 q
b11 N"
bx :
bx G
bx W
bx l
bx r
bx #"
bx A"
b0 U"
b0 R"
b0 Q"
b1 6
b1 4"
b1 L"
17
b101 7"
0,
b10 -
b10 '"
b10 :"
b10 ="
1!
#80000
0!
#85000
b111 7"
bx =
bx o
bx z
b1xxxxxxxxxxxxxxxxxxxxxxx %"
x>
x<
bx $"
x&"
b100000000000000000000000 {
1!"
bx0000000000000000000000000000000 A
bx0000000000000000000000000000000 b
bx E
bx O
b0 n
0B
1@
b0 m
b1xxxxxxxxxxxxxxxxxxxxxxx Y
xF
xD
bx X
xZ
b10000000000000000000000000000000 p
b10000000000000000000000000000000 u
1i
b100000000000000000000000 d
1T
b100000000000000000000000 P
b0 3
b0 C
b0 U
b0 j
b0 q
b0 N"
b0 /
b0 ;"
b0 J"
1!
#90000
0!
#95000
b100000000000000000000100 {
0!"
b1000 %"
b10000000000000000000000000001000 =
b10000000000000000000000000001000 o
b10000000000000000000000000001000 z
b10000000000000000000100000000000000000000010000 c
0@
b10000001 m
b10000 n
b1000000100000000000000000010000 A
b1000000100000000000000000010000 b
b1000 Y
b1000 E
b1000 O
b1000 9
b1000 @"
b1000 D"
b10000000000000000000000000000100 p
b10000000000000000000000000000100 u
0i
b100000000000000000000100 d
0T
b100000000000000000000100 P
0""
b100000000000000000000100 |
0t
0s
0>
1<
b0 $"
1&"
0k
b100000000000000000000100 e
0\
0[
b110000001 f
0_
0V
b100000000000000000000100 Q
0J
0I
0F
1D
b0 X
0Z
1%
b1000 4
b1000 E"
b1000 I"
b1000 O"
b1000 V"
b0 ~
0y
b0 h
0a
b0 S
0N
b1000 (
b1000 H
b1000 G"
b100 3
b100 C
b100 U
b100 j
b100 q
b100 N"
b100 :
b100 G
b100 W
b100 l
b100 r
b100 #"
b100 A"
b0 7"
1)
b10 6
b10 4"
b10 L"
07
1!
#100000
0!
#105000
b1000000100000000000000000011000 A
b1000000100000000000000000011000 b
b10000000000000000000000000001100 =
b10000000000000000000000000001100 o
b10000000000000000000000000001100 z
b1100 E
b1100 O
b11000 n
b1100 %"
b10000000000000000000110000000000000000000100000 c
b1100 Y
b100000000000000000001000 |
b100000000000000000001000 e
b100000000000000000001000 Q
b1100 4
b1100 E"
b1100 I"
b1100 O"
b1100 V"
b1100 (
b1100 H
b1100 G"
b1000 :
b1000 G
b1000 W
b1000 l
b1000 r
b1000 #"
b1000 A"
b1 7"
0)
1,
08
0'
b1000 *
b1000 C"
b1000 F"
b1000 P"
1!
#110000
0!
#115000
bx 9
bx @"
bx D"
1'
18
x>
x<
bx $"
x&"
b100000000000000000000000 {
1!"
bx =
bx o
bx z
bx E
bx O
xs
x[
bx c
b0 n
0B
1@
b0 m
bx0000000000000000000000000000000 A
bx0000000000000000000000000000000 b
xI
xF
xD
bx X
xZ
b10000000000000000000000000000000 p
b10000000000000000000000000000000 u
1i
b100000000000000000000000 d
1T
b100000000000000000000000 P
x""
b1xxxxxxxxxxxxxxxxxxxxxxx |
xt
b1xxxxxxxxxxxxxxxxxxxxxxx %"
xk
b1xxxxxxxxxxxxxxxxxxxxxxx e
x\
bx f
x_
xV
b1xxxxxxxxxxxxxxxxxxxxxxx Q
xJ
b1xxxxxxxxxxxxxxxxxxxxxxx Y
x%
bx 4
bx E"
bx I"
bx O"
bx V"
bx ~
xy
bx h
xa
bx S
xN
bx (
bx H
bx G"
b0 3
b0 C
b0 U
b0 j
b0 q
b0 N"
bx :
bx G
bx W
bx l
bx r
bx #"
bx A"
bx U"
bx R"
bx Q"
b1 6
b1 4"
b1 L"
17
0,
bx -
bx '"
bx :"
bx ="
1!
#120000
0!
#125000
xw
xv
bx %"
b1xxxxxxxxxxxxxxxxxxxxxxx {
x!"
xx
bx }
x^
xL
bx Y
bx p
bx u
xi
b1xxxxxxxxxxxxxxxxxxxxxxx d
x]
xT
b1xxxxxxxxxxxxxxxxxxxxxxx P
xK
bx g
x`
bx R
xM
bx 3
bx C
bx U
bx j
bx q
bx N"
bx /
bx ;"
bx J"
1!
#130000
0!
#135000
1!
#140000
0!
#145000
1!
#150000
0!
#155000
1!
#160000
0!
#165000
1!
#170000
0!
#175000
1!
#180000
0!
#185000
1!
#190000
0!
#195000
1!
#200000
0!
#205000
1!
#210000
0!
#215000
1!
